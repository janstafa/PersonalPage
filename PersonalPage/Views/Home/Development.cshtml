@{
    ViewBag.Title = "Development";
}

<hgroup class="title">
    <h1>@ViewBag.Title</h1>
    <h2>@ViewBag.Message</h2>
</hgroup>

<section class="@ViewBag.Title">
    <header>
        <h3>ASP.NET MVC</h3>
    </header>
    <p>
       

My preferred development framework is Microsoft's MVC framework. I find that using MVC rather than traditional ASP.NET Web Forms enables me to develop sites that are more robust, thanks to the inherent testability of the MVC pattern, and more cleanly marked-up, due to the higher degree of control over rendered XHTML.

The MVC framework's distinct separation of concerns facilitates good design. Simpler integration with IoC containers such as Castle Windsor means that loosely-coupled, highly testable code is far easier to produce than with Web Forms.
This site is built using ASP.NET MVC.
    </p>
</section>

<section class="@ViewBag.Title">
    <header>
        <h3>XHTML & CSS</h3>
    </header>
    <p>
       I'm passionate about markup and pride myself on producing sites with valid semantic XHTML, using CSS for layout. The benefits of clean separation of markup (XHTML), behaviour (Javascript), and style (CSS) include:
Less bugs - Valid XHTML is rendered far more consistently amongst browsers
Better SEO - A higher signal-to-noise ratio in your markup results in better search engine rankings
Accessibility - Screenreaders are much happier when they deal with table-less layouts!
    </p>
</section>
