<?xml version="1.0" encoding="utf-8"?><pex id="{f3268900-583a-4367-80ce-a162500c5d4d}" creationTime="2012-05-10 16:52:40Z" configuration="PersonalPage.Models!\ServiceRecordModel!\*" created="2012-05-10 16:52:41Z" pexVersion="0.94.51006.1" xml="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\bin\reports\120510.175240.9240.pex\report.per" html="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\bin\reports\120510.175240.9240.pex\report.html"><environment commandLine="&quot;C:\Program Files (x86)\Microsoft Pex\bin\Microsoft.Pex.x86.exe&quot; C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\bin\PersonalPage.dll /namespacefilter:PersonalPage.Models! /typefilter:ServiceRecordModel! /assemblyresolutiondirectories:&quot;c:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\PublicAssemblies&quot; /explorationreflectionmode:LazyWizard /instrumentedassemblies:EntityFramework;Microsoft.Web.Infrastructure;Newtonsoft.Json;System.Data.Entity;System.Drawing;System.Json;System.Net.Http;System.Net.Http.Formatting;System.Net.Http.WebRequest;System.Web.DynamicData;System.Web.Entity;System.Web.ApplicationServices;System.ComponentModel.DataAnnotations;System.Web.Helpers;System.Web.Http;System.Web.Http.Common;System.Web.Http.WebHost;System.Web.Mvc;System.Web.Optimization;System.Web.Providers;System.Web.Razor;System.Web.WebPages;System.Web.WebPages.Deployment;System.Web.WebPages.Razor;System.Web.Extensions;System.Web.Abstractions;System.Web.Routing;System.Web.Services;System.EnterpriseServices /targetx86 /x64failsilently /clrversion:v4.0.30319 /donotopenreport /reportlevel:Xml /reportrootpath:C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\bin\reports /testassemblyname:PersonalPage1.Tests /testframework:VisualStudioUnitTest /testlanguage:cs /testprojectfile:C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\PersonalPage.csproj /testprojectnotupdate /testprojectskip" machineName="SIMON-PC" osVersion="Microsoft Windows NT 6.1.7601 Service Pack 1" processorCount="2" clrVersion="4.0.30319.269" bitness="x86" user="Simon"><envVars><envVar name="HOMEPATH" value="\Users\Simon"/>
<envVar name="PUBLIC" value="C:\Users\Public"/>
<envVar name="COMPUTERNAME" value="SIMON-PC"/>
<envVar name="CLRMONITOR_INJECT_TYPES" value=""/>
<envVar name="COMPLUS_ProfAPI_ProfilerCompatibilitySetting" value="EnableV2Profiler"/>
<envVar name="CommonProgramFiles(x86)" value="C:\Program Files (x86)\Common Files"/>
<envVar name="PROCESSOR_IDENTIFIER" value="Intel64 Family 6 Model 23 Stepping 10, GenuineIntel"/>
<envVar name="PROCESSOR_REVISION" value="170a"/>
<envVar name="CLRMONITOR_INSTRUMENT_TYPES_EXCLUSIONS" value=""/>
<envVar name="PATHEXT" value=".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC"/>
<envVar name="COMPLUS_DEFAULTVERSION" value="v4.0.30319"/>
<envVar name="CLRMONITOR_CLSID" value="{21bbb412-71ac-41f9-a377-48529a4859cf}"/>
<envVar name="TMP" value="C:\Users\Simon\AppData\Local\Temp"/>
<envVar name="TEMP" value="C:\Users\Simon\AppData\Local\Temp"/>
<envVar name="LOCALAPPDATA" value="C:\Users\Simon\AppData\Local"/>
<envVar name="CLRMONITOR_INSTRUMENT_NAMESPACES_EXCLUSIONS" value=""/>
<envVar name="CLRMONITOR_PROTECT_TYPES" value="Microsoft.FSharp.Text.Printf,Microsoft.FSharp.Text.PrintfImpl"/>
<envVar name="CLRMONITOR_INJECT_ASSEMBLIES" value=""/>
<envVar name="ProgramData" value="C:\ProgramData"/>
<envVar name="CLRMONITOR_INITIALIZED" value="0x1e"/>
<envVar name="USERDOMAIN" value="Simon-PC"/>
<envVar name="windir" value="C:\Windows"/>
<envVar name="CLRMONITOR_ERASE_FINALIZER_TYPES" value=""/>
<envVar name="CLRMONITOR_INJECT_NAMESPACES" value=""/>
<envVar name="NUMBER_OF_PROCESSORS" value="2"/>
<envVar name="Path" value="C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;c:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn\;c:\Program Files\Microsoft SQL Server\100\Tools\Binn\;c:\Program Files\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files\TortoiseSVN\bin;C:\Users\Simon\Workspace\C#\Projects\PersonalPage\packages\Microsoft.Web.Infrastructure.1.0.0.0\tools;C:\Users\Simon\Workspace\C#\Projects\PersonalPage\packages\AspNetRazor.Core.2.0.20126.16343\tools;C:\Users\Simon\Workspace\C#\Projects\PersonalPage\packages\AspNetWebPages.Core.2.0.20126.16343\tools;C:\Users\Simon\Workspace\C#\Projects\PersonalPage\packages\System.Web.Providers.1.1\tools"/>
<envVar name="ProgramFiles(x86)" value="C:\Program Files (x86)"/>
<envVar name="PROCESSOR_LEVEL" value="6"/>
<envVar name="PROCESSOR_ARCHITEW6432" value="AMD64"/>
<envVar name="CommonProgramFiles" value="C:\Program Files (x86)\Common Files"/>
<envVar name="CLRMONITOR_FLAGS" value=""/>
<envVar name="pex_instrumentation" value="1"/>
<envVar name="SESSIONNAME" value="Console"/>
<envVar name="CLRMONITOR_INSTRUMENT_TYPES" value="System.Array,System.Array+ArrayEnumerator,System.Array+FunctorComparer`1,System.Array+SZArrayEnumerator,System.Array+SorterGenericArray,System.Array+SorterObjectArray,System.Boolean,System.Byte,System.Char,System.CharEnumerator,System.ComponentModel.Component,System.ComponentModel.Container,System.ComponentModel.Container+Site,System.Convert,System.Currency,System.DateTime,System.Decimal,System.Diagnostics.Assert,System.Double,System.Globalization.CharUnicodeInfo,System.Globalization.CultureTableRecord,System.Globalization.TextInfo,System.Guid,System.IO.MemoryStream,System.IO.Stream,System.IO.StreamReader,System.IO.StreamWriter,System.IO.StringReader,System.IO.StringWriter,System.Int16,System.Int32,System.Int64,System.Lazy`1,System.Lazy`1+Boxed,System.Lazy`1+LazyInternalExceptionHolder,System.Math,System.Nullable,System.Nullable`1,System.OrdinalComparer,System.SByte,System.SZArrayHelper,System.SZArrayHelper+SZGenericArrayEnumerator`1,System.Single,System.String,System.StringComparer,System.Text.ASCIIEncoding,System.Text.DecoderNLS,System.Text.Encoding,System.Text.UTF8Encoding,System.TimeSpan,System.Tuple,System.Tuple`1,System.Tuple`2,System.Tuple`3,System.Tuple`4,System.Tuple`5,System.Tuple`6,System.Tuple`7,System.Tuple`8,System.UInt16,System.UInt32,System.UInt64,System.Xml.XmlTextWriter,System.Xml.XmlTextWriter+Namespace,System.Xml.XmlTextWriter+NamespaceState,System.Xml.XmlTextWriter+SpecialAttr,System.Xml.XmlTextWriter+State,System.Xml.XmlTextWriter+TagInfo,System.Xml.XmlTextWriter+Token,System.Xml.XmlWriter,__Box`1,__SzArrayHelper`1"/>
<envVar name="PSModulePath" value="C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\Extensions\Microsoft Corporation\NuGet Package Manager\1.6.30117.9648\Modules\;C:\Windows\system32\WindowsPowerShell\v1.0\Modules\"/>
<envVar name="ProgramW6432" value="C:\Program Files"/>
<envVar name="ProgramFiles" value="C:\Program Files (x86)"/>
<envVar name="CLRMONITOR_ERASE_CCTOR_TYPES" value=""/>
<envVar name="FP_NO_HOST_CHECK" value="NO"/>
<envVar name="pex_clientid" value="pex7056_1"/>
<envVar name="SystemRoot" value="C:\Windows"/>
<envVar name="CLRMONITOR_INSTRUMENT_ATTRIBUTE" value="Microsoft.Moles.Framework.Moles.MolesInstrumentAttribute"/>
<envVar name="CLRMONITOR_PROTECT_ALL_CCTORS" value="1"/>
<envVar name="__COMPAT_LAYER" value="ElevateCreateProcess"/>
<envVar name="CommonProgramW6432" value="C:\Program Files\Common Files"/>
<envVar name="LOGONSERVER" value="\\SIMON-PC"/>
<envVar name="USERPROFILE" value="C:\Users\Simon"/>
<envVar name="VisualStudioDir" value="C:\Users\Simon\Documents\Visual Studio 2010"/>
<envVar name="CLRMONITOR_SUBSTITUTIONS" value="C:\Windows\assembly\GAC_MSIL\Microsoft.ExtendedReflection\0.94.0.0__31bf3856ad364e35\Microsoft.ExtendedReflection.dll"/>
<envVar name="CLRMONITOR_INSTRUMENT_ASSEMBLIES_EXCLUSIONS" value=""/>
<envVar name="APPDATA" value="C:\Users\Simon\AppData\Roaming"/>
<envVar name="HOMEDRIVE" value="C:"/>
<envVar name="PSExecutionPolicyPreference" value="RemoteSigned"/>
<envVar name="ComSpec" value="C:\Windows\system32\cmd.exe"/>
<envVar name="VS100COMNTOOLS" value="C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\Tools\"/>
<envVar name="USERNAME" value="Simon"/>
<envVar name="COR_PROFILER" value="{21bbb412-71ac-41f9-a377-48529a4859cf}"/>
<envVar name="PROCESSOR_ARCHITECTURE" value="x86"/>
<envVar name="pex_server_channel" value="pex7056"/>
<envVar name="OS" value="Windows_NT"/>
<envVar name="CLRMONITOR_INSTRUMENT_NAMESPACES" value="System.Collections,System.Collections.Generic,System.Collections.ObjectModel,System.Collections.Specialized,System.Diagnostics.Contracts"/>
<envVar name="SystemDrive" value="C:"/>
<envVar name="CLRMONITOR_INSTRUMENT_ASSEMBLIES" value="EntityFramework,FSharp.Core,FSharp.PowerPack,Microsoft.Contracts,Microsoft.VisualBasic,Microsoft.VisualStudio.QualityTools.UnitTestFramework,Microsoft.Web.Infrastructure,Newtonsoft.Json,PersonalPage,PersonalPage1.Tests,System,System.ComponentModel.DataAnnotations,System.Core,System.Data.Entity,System.Drawing,System.EnterpriseServices,System.Json,System.Net.Http,System.Net.Http.Formatting,System.Net.Http.WebRequest,System.Web,System.Web.Abstractions,System.Web.ApplicationServices,System.Web.DynamicData,System.Web.Entity,System.Web.Extensions,System.Web.Helpers,System.Web.Http,System.Web.Http.Common,System.Web.Http.WebHost,System.Web.Mvc,System.Web.Optimization,System.Web.Providers,System.Web.Razor,System.Web.Routing,System.Web.Services,System.Web.WebPages,System.Web.WebPages.Deployment,System.Web.WebPages.Razor"/>
<envVar name="ALLUSERSPROFILE" value="C:\ProgramData"/>
</envVars>
</environment>
<settings/>
<reflection/>
<assembly name="PersonalPage" version="1.0.0.0" fileVersion="1.0.0.0" fullName="PersonalPage, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" location="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\bin\PersonalPage.dll" fileName="PersonalPage.dll"><settings testFramework="VisualStudioUnitTest" testLanguage="cs"/>
<fixture name="ServiceRecordModelTest" type="PersonalPage.Models.ServiceRecordModelTest" typeName="ServiceRecordModelTest" token="2000002" href="fix\PersonalPage1.Tests.516.html"><type spec="Class"><definition assemblyName="PersonalPage1.Tests" name="ServiceRecordModelTest" token="2000002" namespace="PersonalPage.Models"/>
</type>
<settings typeUnderTest="PersonalPage.Models.ServiceRecordModel"/>
<exploration shortName="GetAllServiceRecords(ServiceRecordModel)" fullName="PersonalPage.Models.ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" isDynamicCode="true"><target><methodDefinition assemblyName="PersonalPage" name="GetAllServiceRecords" token="6000043"><declaringType assemblyName="PersonalPage" name="ServiceRecordModel" token="2000011" namespace="PersonalPage.Models"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="PersonalPage" name="ServiceRecordModel" token="2000011" namespace="PersonalPage.Models"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="200004d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="PersonalPage" name="ServiceRecord" token="2000002" namespace="PersonalPage.Models.Entities"/>
</genericTypeArgument>
</resultType>
</methodDefinition>
</target>
<log level="message" time="2012-05-10 16:52:46Z" category="symbols" message="could not load symbols for C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<log level="message" time="2012-05-10 16:52:46Z" category="symbols" message="search path: ;"/>
<log level="message" time="2012-05-10 16:52:46Z" category="symbols" message="could not load symbols for C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System\v4.0_4.0.0.0__b77a5c561934e089\System.dll"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 Microsoft.Win32.Win32Native.GetACP()" declaringTypeDisplayName="Microsoft.Win32.Win32Native" methodShortDisplayName="Win32Native.GetACP()" wikiTopic="External Method Called"/>
<uninstrumented methodDisplayName="System.Void System.Text.InternalEncoderBestFitFallback..ctor(System.Text.Encoding encoding)" declaringTypeDisplayName="System.Text.InternalEncoderBestFitFallback" methodShortDisplayName="InternalEncoderBestFitFallback..ctor(Encoding)" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented methodDisplayName="System.Void System.Text.InternalDecoderBestFitFallback..ctor(System.Text.Encoding encoding)" declaringTypeDisplayName="System.Text.InternalDecoderBestFitFallback" methodShortDisplayName="InternalDecoderBestFitFallback..ctor(Encoding)" wikiTopic="Uninstrumented Method Called"/>
<staticFieldStore fieldDisplayName="System.Text.Encoding.defaultEncoding" declaringTypeDisplayName="System.Text.Encoding" fieldShortDisplayName="defaultEncoding" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="mscorlib" name="defaultEncoding" static="true" token="4001748"><declaringType assemblyName="mscorlib" name="Encoding" token="20004fc" namespace="System.Text"/>
<fieldType spec="Class"><definition assemblyName="mscorlib" name="Encoding" token="20004fc" namespace="System.Text"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at Encoding.get_Default()" method="Encoding.get_Default()" offset="12"/>
<frame value="  at WebClient..ctor()" method="WebClient..ctor()" offset="1"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(20)" method="TwitterClient.GetRequest(Uri)" offset="27" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="20"><beforeSource><![CDATA[
            #endregion
]]></beforeSource>
<source><![CDATA[            WebClient client = new WebClient();]]></source>
<afterSource><![CDATA[            return client.DownloadString(requestUri);
        }
    }]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.Logging.s_InternalSyncObject" declaringTypeDisplayName="System.Net.Logging" fieldShortDisplayName="s_InternalSyncObject" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_InternalSyncObject" static="true" token="4001c1c"><declaringType assemblyName="System" name="Logging" token="200044f" namespace="System.Net"/>
<fieldType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at Logging.get_InternalSyncObject()" method="Logging.get_InternalSyncObject()" offset="20"/>
<frame value="  at Logging.InitializeLogging()" method="Logging.InitializeLogging()" offset="2"/>
<frame value="  at Logging.get_On()" method="Logging.get_On()" offset="7"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="0"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Diagnostics.TraceSource.s_LastCollectionCount" declaringTypeDisplayName="System.Diagnostics.TraceSource" fieldShortDisplayName="s_LastCollectionCount" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_LastCollectionCount" static="true" token="400093c"><declaringType assemblyName="System" name="TraceSource" token="20001dc" namespace="System.Diagnostics"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at TraceSource._pruneCachedTraceSources()" method="TraceSource._pruneCachedTraceSources()" offset="167"/>
<frame value="  at TraceSource..ctor(String, SourceLevels)" method="TraceSource..ctor(String, SourceLevels)" offset="69"/>
<frame value="  at TraceSource..ctor(String)" method="TraceSource..ctor(String)" offset="3"/>
<frame value="  at NclTraceSource..ctor(String)" method="NclTraceSource..ctor(String)" offset="2"/>
<frame value="  at Logging.InitializeLogging()" method="Logging.InitializeLogging()" offset="33"/>
<frame value="  at Logging.get_On()" method="Logging.get_On()" offset="7"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="0"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.Logging.s_WebTraceSource" declaringTypeDisplayName="System.Net.Logging" fieldShortDisplayName="s_WebTraceSource" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_WebTraceSource" static="true" token="4001c18"><declaringType assemblyName="System" name="Logging" token="200044f" namespace="System.Net"/>
<fieldType spec="Class"><definition assemblyName="System" name="TraceSource" token="20001dc" namespace="System.Diagnostics"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at Logging.InitializeLogging()" method="Logging.InitializeLogging()" offset="38"/>
<frame value="  at Logging.get_On()" method="Logging.get_On()" offset="7"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="0"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.Logging.s_HttpListenerTraceSource" declaringTypeDisplayName="System.Net.Logging" fieldShortDisplayName="s_HttpListenerTraceSource" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_HttpListenerTraceSource" static="true" token="4001c19"><declaringType assemblyName="System" name="Logging" token="200044f" namespace="System.Net"/>
<fieldType spec="Class"><definition assemblyName="System" name="TraceSource" token="20001dc" namespace="System.Diagnostics"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at Logging.InitializeLogging()" method="Logging.InitializeLogging()" offset="53"/>
<frame value="  at Logging.get_On()" method="Logging.get_On()" offset="7"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="0"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.Logging.s_SocketsTraceSource" declaringTypeDisplayName="System.Net.Logging" fieldShortDisplayName="s_SocketsTraceSource" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_SocketsTraceSource" static="true" token="4001c1a"><declaringType assemblyName="System" name="Logging" token="200044f" namespace="System.Net"/>
<fieldType spec="Class"><definition assemblyName="System" name="TraceSource" token="20001dc" namespace="System.Diagnostics"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at Logging.InitializeLogging()" method="Logging.InitializeLogging()" offset="68"/>
<frame value="  at Logging.get_On()" method="Logging.get_On()" offset="7"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="0"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.Logging.s_CacheTraceSource" declaringTypeDisplayName="System.Net.Logging" fieldShortDisplayName="s_CacheTraceSource" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_CacheTraceSource" static="true" token="4001c1b"><declaringType assemblyName="System" name="Logging" token="200044f" namespace="System.Net"/>
<fieldType spec="Class"><definition assemblyName="System" name="TraceSource" token="20001dc" namespace="System.Diagnostics"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at Logging.InitializeLogging()" method="Logging.InitializeLogging()" offset="83"/>
<frame value="  at Logging.get_On()" method="Logging.get_On()" offset="7"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="0"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<log level="message" time="2012-05-10 16:52:47Z" category="symbols" message="could not load symbols for C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Configuration\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Configuration.dll"/>
<uninstrumented methodDisplayName="System.Object System.Configuration.ConfigurationElement.get_Item(System.Configuration.ConfigurationProperty prop)" declaringTypeDisplayName="System.Configuration.ConfigurationElement" methodShortDisplayName="ConfigurationElement.get_Item(ConfigurationProperty)" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented methodDisplayName="System.Void System.Configuration.ConfigurationElementCollection..ctor()" declaringTypeDisplayName="System.Configuration.ConfigurationElementCollection" methodShortDisplayName="ConfigurationElementCollection..ctor()" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented methodDisplayName="System.Configuration.ConfigurationElement System.Configuration.ConfigurationElementCollection.BaseGet(System.Object key)" declaringTypeDisplayName="System.Configuration.ConfigurationElementCollection" methodShortDisplayName="ConfigurationElementCollection.BaseGet(Object)" wikiTopic="Uninstrumented Method Called"/>
<staticFieldStore fieldDisplayName="System.Diagnostics.Switch.s_LastCollectionCount" declaringTypeDisplayName="System.Diagnostics.Switch" fieldShortDisplayName="s_LastCollectionCount" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_LastCollectionCount" static="true" token="40008c3"><declaringType assemblyName="System" name="Switch" token="20001b7" namespace="System.Diagnostics"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at Switch._pruneCachedSwitches()" method="Switch._pruneCachedSwitches()" offset="167"/>
<frame value="  at Switch..ctor(String, String, String)" method="Switch..ctor(String, String, String)" offset="57"/>
<frame value="  at SourceSwitch..ctor(String, String)" method="SourceSwitch..ctor(String, String)" offset="8"/>
<frame value="  at TraceSource.NoConfigInit()" method="TraceSource.NoConfigInit()" offset="23"/>
<frame value="  at TraceSource.Initialize()" method="TraceSource.Initialize()" offset="234"/>
<frame value="  at TraceSource.get_Switch()" method="TraceSource.get_Switch()" offset="1"/>
<frame value="  at Logging.InitializeLogging()" method="Logging.InitializeLogging()" offset="93"/>
<frame value="  at Logging.get_On()" method="Logging.get_On()" offset="7"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="0"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<uninstrumented methodDisplayName="System.Boolean System.Configuration.Internal.ConfigurationManagerInternal.System.Configuration.Internal.IConfigurationManagerInternal.get_SetConfigurationSystemInProgress()" declaringTypeDisplayName="System.Configuration.Internal.ConfigurationManagerInternal" methodShortDisplayName="ConfigurationManagerInternal.System.Configuration.Internal.IConfigurationManagerInternal.get_SetConfigurationSystemInProgress()" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented methodDisplayName="System.Array System.Enum.GetValues(System.Type enumType)" declaringTypeDisplayName="System.Enum" methodShortDisplayName="Enum.GetValues(Type)" wikiTopic="Uninstrumented Method Called"/>
<staticFieldStore fieldDisplayName="System.Net.Logging.s_LoggingEnabled" declaringTypeDisplayName="System.Net.Logging" fieldShortDisplayName="s_LoggingEnabled" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_LoggingEnabled" static="true" token="4001c14"><declaringType assemblyName="System" name="Logging" token="200044f" namespace="System.Net"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at Logging.InitializeLogging()" method="Logging.InitializeLogging()" offset="238"/>
<frame value="  at Logging.get_On()" method="Logging.get_On()" offset="7"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="0"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.Logging.s_LoggingInitialized" declaringTypeDisplayName="System.Net.Logging" fieldShortDisplayName="s_LoggingInitialized" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_LoggingInitialized" static="true" token="4001c15"><declaringType assemblyName="System" name="Logging" token="200044f" namespace="System.Net"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at Logging.InitializeLogging()" method="Logging.InitializeLogging()" offset="244"/>
<frame value="  at Logging.get_On()" method="Logging.get_On()" offset="7"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="0"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.WebRequest.s_InternalSyncObject" declaringTypeDisplayName="System.Net.WebRequest" fieldShortDisplayName="s_InternalSyncObject" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_InternalSyncObject" static="true" token="4001807"><declaringType assemblyName="System" name="WebRequest" token="20003cf" namespace="System.Net"/>
<fieldType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at WebRequest.get_InternalSyncObject()" method="WebRequest.get_InternalSyncObject()" offset="20"/>
<frame value="  at WebRequest.get_PrefixList()" method="WebRequest.get_PrefixList()" offset="9"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="75"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.Configuration.WebRequestModulesSectionInternal.classSyncObject" declaringTypeDisplayName="System.Net.Configuration.WebRequestModulesSectionInternal" fieldShortDisplayName="classSyncObject" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="classSyncObject" static="true" token="4002a9b"><declaringType assemblyName="System" name="WebRequestModulesSectionInternal" token="20006bd" namespace="System.Net.Configuration"/>
<fieldType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at WebRequestModulesSectionInternal.get_ClassSyncObject()" method="WebRequestModulesSectionInternal.get_ClassSyncObject()" offset="20"/>
<frame value="  at WebRequestModulesSectionInternal.GetSection()" method="WebRequestModulesSectionInternal.GetSection()" offset="2"/>
<frame value="  at WebRequest.get_PrefixList()" method="WebRequest.get_PrefixList()" offset="30"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="75"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<uninstrumented methodDisplayName="System.Object System.Configuration.ConfigurationManager.GetSection(System.String sectionName)" declaringTypeDisplayName="System.Configuration.ConfigurationManager" methodShortDisplayName="ConfigurationManager.GetSection(String)" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented methodDisplayName="System.Void System.Configuration.ConfigurationPropertyCollection..ctor()" declaringTypeDisplayName="System.Configuration.ConfigurationPropertyCollection" methodShortDisplayName="ConfigurationPropertyCollection..ctor()" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented methodDisplayName="System.Void System.Configuration.ConfigurationProperty..ctor(System.String name, System.Type type, System.Object defaultValue, System.Configuration.ConfigurationPropertyOptions options)" declaringTypeDisplayName="System.Configuration.ConfigurationProperty" methodShortDisplayName="ConfigurationProperty..ctor(String, Type, Object, ConfigurationPropertyOptions)" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented methodDisplayName="System.Void System.Configuration.ConfigurationSection..ctor()" declaringTypeDisplayName="System.Configuration.ConfigurationSection" methodShortDisplayName="ConfigurationSection..ctor()" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented methodDisplayName="System.Void System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty property)" declaringTypeDisplayName="System.Configuration.ConfigurationPropertyCollection" methodShortDisplayName="ConfigurationPropertyCollection.Add(ConfigurationProperty)" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented methodDisplayName="System.Void System.Configuration.ConfigurationProperty..ctor(System.String name, System.Type type, System.Object defaultValue, System.ComponentModel.TypeConverter typeConverter, System.Configuration.ConfigurationValidatorBase validator, System.Configuration.ConfigurationPropertyOptions options)" declaringTypeDisplayName="System.Configuration.ConfigurationProperty" methodShortDisplayName="ConfigurationProperty..ctor(String, Type, Object, TypeConverter, ConfigurationValidatorBase, ConfigurationPropertyOptions)" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented methodDisplayName="System.Void System.Configuration.ConfigurationElement..ctor()" declaringTypeDisplayName="System.Configuration.ConfigurationElement" methodShortDisplayName="ConfigurationElement..ctor()" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented methodDisplayName="System.Void System.Configuration.ConfigurationElement.set_Item(System.Configuration.ConfigurationProperty prop, System.Object value)" declaringTypeDisplayName="System.Configuration.ConfigurationElement" methodShortDisplayName="ConfigurationElement.set_Item(ConfigurationProperty, Object)" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented methodDisplayName="System.Void System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement element)" declaringTypeDisplayName="System.Configuration.ConfigurationElementCollection" methodShortDisplayName="ConfigurationElementCollection.BaseAdd(ConfigurationElement)" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented methodDisplayName="System.Int32 System.Configuration.ConfigurationElementCollection.get_Count()" declaringTypeDisplayName="System.Configuration.ConfigurationElementCollection" methodShortDisplayName="ConfigurationElementCollection.get_Count()" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented methodDisplayName="System.Collections.IEnumerator System.Configuration.ConfigurationElementCollection.GetEnumerator()" declaringTypeDisplayName="System.Configuration.ConfigurationElementCollection" methodShortDisplayName="ConfigurationElementCollection.GetEnumerator()" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented methodDisplayName="System.Boolean System.Configuration.ConfigurationElementCollection+Enumerator.System.Collections.IEnumerator.MoveNext()" declaringTypeDisplayName="System.Configuration.ConfigurationElementCollection+Enumerator" methodShortDisplayName="Enumerator.System.Collections.IEnumerator.MoveNext()" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented methodDisplayName="System.Object System.Configuration.ConfigurationElementCollection+Enumerator.System.Collections.IEnumerator.get_Current()" declaringTypeDisplayName="System.Configuration.ConfigurationElementCollection+Enumerator" methodShortDisplayName="Enumerator.System.Collections.IEnumerator.get_Current()" wikiTopic="Uninstrumented Method Called"/>
<staticFieldStore fieldDisplayName="System.Net.WebRequest.s_PrefixList" declaringTypeDisplayName="System.Net.WebRequest" fieldShortDisplayName="s_PrefixList" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_PrefixList" static="true" token="4001806"><declaringType assemblyName="System" name="WebRequest" token="20003cf" namespace="System.Net"/>
<fieldType spec="Class"><definition assemblyName="mscorlib" name="ArrayList" token="2000318" namespace="System.Collections"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at WebRequest.get_PrefixList()" method="WebRequest.get_PrefixList()" offset="40"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="75"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<uninstrumented extern="true" methodDisplayName="System.Boolean Microsoft.Win32.SafeNativeMethods.QueryPerformanceCounter(System.Int64&amp; value)" declaringTypeDisplayName="Microsoft.Win32.SafeNativeMethods" methodShortDisplayName="SafeNativeMethods.QueryPerformanceCounter(Int64&amp;)" wikiTopic="External Method Called"/>
<staticFieldStore fieldDisplayName="System.Net.Configuration.SettingsSectionInternal.s_InternalSyncObject" declaringTypeDisplayName="System.Net.Configuration.SettingsSectionInternal" fieldShortDisplayName="s_InternalSyncObject" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_InternalSyncObject" static="true" token="4002a55"><declaringType assemblyName="System" name="SettingsSectionInternal" token="20006ac" namespace="System.Net.Configuration"/>
<fieldType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at SettingsSectionInternal.get_InternalSyncObject()" method="SettingsSectionInternal.get_InternalSyncObject()" offset="20"/>
<frame value="  at SettingsSectionInternal.get_Section()" method="SettingsSectionInternal.get_Section()" offset="9"/>
<frame value="  at NetworkingPerfCounters..ctor()" method="NetworkingPerfCounters..ctor()" offset="7"/>
<frame value="  at NetworkingPerfCounters.CreateInstance()" method="NetworkingPerfCounters.CreateInstance()" offset="0"/>
<frame value="  at NetworkingPerfCounters.get_Instance()" method="NetworkingPerfCounters.get_Instance()" offset="30"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="77"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<uninstrumented methodDisplayName="System.Void System.Configuration.ConfigurationValidatorBase..ctor()" declaringTypeDisplayName="System.Configuration.ConfigurationValidatorBase" methodShortDisplayName="ConfigurationValidatorBase..ctor()" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented methodDisplayName="System.Void System.Configuration.TimeSpanValidator..ctor(System.TimeSpan minValue, System.TimeSpan maxValue, System.Boolean rangeIsExclusive)" declaringTypeDisplayName="System.Configuration.TimeSpanValidator" methodShortDisplayName="TimeSpanValidator..ctor(TimeSpan, TimeSpan, Boolean)" wikiTopic="Uninstrumented Method Called"/>
<staticFieldStore fieldDisplayName="System.Net.Configuration.SettingsSectionInternal.s_settings" declaringTypeDisplayName="System.Net.Configuration.SettingsSectionInternal" fieldShortDisplayName="s_settings" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_settings" static="true" token="4002a56"><declaringType assemblyName="System" name="SettingsSectionInternal" token="20006ac" namespace="System.Net.Configuration"/>
<fieldType spec="Class"><definition assemblyName="System" name="SettingsSectionInternal" token="20006ac" namespace="System.Net.Configuration"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at SettingsSectionInternal.get_Section()" method="SettingsSectionInternal.get_Section()" offset="50"/>
<frame value="  at NetworkingPerfCounters..ctor()" method="NetworkingPerfCounters..ctor()" offset="7"/>
<frame value="  at NetworkingPerfCounters.CreateInstance()" method="NetworkingPerfCounters.CreateInstance()" offset="0"/>
<frame value="  at NetworkingPerfCounters.get_Instance()" method="NetworkingPerfCounters.get_Instance()" offset="30"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="77"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.NetworkingPerfCounters.instance" declaringTypeDisplayName="System.Net.NetworkingPerfCounters" fieldShortDisplayName="instance" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="instance" static="true" token="4002199"><declaringType assemblyName="System" name="NetworkingPerfCounters" token="2000529" namespace="System.Net"/>
<fieldType spec="Class"><definition assemblyName="System" name="NetworkingPerfCounters" token="2000529" namespace="System.Net"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at NetworkingPerfCounters.CreateInstance()" method="NetworkingPerfCounters.CreateInstance()" offset="5"/>
<frame value="  at NetworkingPerfCounters.get_Instance()" method="NetworkingPerfCounters.get_Instance()" offset="30"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="77"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.Configuration.DefaultProxySectionInternal.classSyncObject" declaringTypeDisplayName="System.Net.Configuration.DefaultProxySectionInternal" fieldShortDisplayName="classSyncObject" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="classSyncObject" static="true" token="4002a09"><declaringType assemblyName="System" name="DefaultProxySectionInternal" token="2000697" namespace="System.Net.Configuration"/>
<fieldType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at DefaultProxySectionInternal.get_ClassSyncObject()" method="DefaultProxySectionInternal.get_ClassSyncObject()" offset="20"/>
<frame value="  at DefaultProxySectionInternal.GetSection()" method="DefaultProxySectionInternal.GetSection()" offset="2"/>
<frame value="  at WebRequest.get_InternalDefaultWebProxy()" method="WebRequest.get_InternalDefaultWebProxy()" offset="30"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="101"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<uninstrumented methodDisplayName="System.Void System.Configuration.ConfigurationElement.InitializeDefault()" declaringTypeDisplayName="System.Configuration.ConfigurationElement" methodShortDisplayName="ConfigurationElement.InitializeDefault()" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented methodDisplayName="System.Void System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement parentElement)" declaringTypeDisplayName="System.Configuration.ConfigurationElement" methodShortDisplayName="ConfigurationElement.Reset(ConfigurationElement)" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented uninstrumentable="true" methodDisplayName="System.Int32 System.Runtime.InteropServices.Marshal.SizeOf(System.Type t)" declaringTypeDisplayName="System.Runtime.InteropServices.Marshal" methodShortDisplayName="Marshal.SizeOf(Type)" wikiTopic="Uninstrumentable Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.UInt32 System.Net.UnsafeNclNativeMethods+RasHelper.RasEnumConnections(System.Net.UnsafeNclNativeMethods+RasHelper+RASCONN[] lprasconn, System.UInt32&amp; lpcb, System.UInt32&amp; lpcConnections)" declaringTypeDisplayName="System.Net.UnsafeNclNativeMethods+RasHelper" methodShortDisplayName="RasHelper.RasEnumConnections(RASCONN[], UInt32&amp;, UInt32&amp;)" wikiTopic="External Method Called"/>
<staticFieldStore fieldDisplayName="System.Net.AutoWebProxyScriptEngine+AutoDetector.s_CurrentAutoDetector" declaringTypeDisplayName="System.Net.AutoWebProxyScriptEngine+AutoDetector" fieldShortDisplayName="s_CurrentAutoDetector" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_CurrentAutoDetector" static="true" token="4001fbd"><declaringType assemblyName="System" name="AutoDetector" token="20004e3"><declaringType assemblyName="System" name="AutoWebProxyScriptEngine" token="20004e1" namespace="System.Net"/>
</declaringType>
<fieldType spec="Class"><definition assemblyName="System" name="AutoDetector" token="20004e3"><declaringType assemblyName="System" name="AutoWebProxyScriptEngine" token="20004e1" namespace="System.Net"/>
</definition>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at AutoDetector.Initialize()" method="AutoDetector.Initialize()" offset="47"/>
<frame value="  at AutoDetector.get_CurrentAutoDetector()" method="AutoDetector.get_CurrentAutoDetector()" offset="0"/>
<frame value="  at AutoWebProxyScriptEngine..ctor(WebProxy, Boolean)" method="AutoWebProxyScriptEngine..ctor(WebProxy, Boolean)" offset="21"/>
<frame value="  at WebProxy.UnsafeUpdateFromRegistry()" method="WebProxy.UnsafeUpdateFromRegistry()" offset="10"/>
<frame value="  at WebProxy..ctor(Boolean)" method="WebProxy..ctor(Boolean)" offset="14"/>
<frame value="  at DefaultProxySectionInternal..ctor(DefaultProxySection)" method="DefaultProxySectionInternal..ctor(DefaultProxySection)" offset="197"/>
<frame value="  at DefaultProxySectionInternal.GetSection()" method="DefaultProxySectionInternal.GetSection()" offset="41"/>
<frame value="  at WebRequest.get_InternalDefaultWebProxy()" method="WebRequest.get_InternalDefaultWebProxy()" offset="30"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="101"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.Sockets.Socket.s_InternalSyncObject" declaringTypeDisplayName="System.Net.Sockets.Socket" fieldShortDisplayName="s_InternalSyncObject" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_InternalSyncObject" static="true" token="4002600"><declaringType assemblyName="System" name="Socket" token="20005ed" namespace="System.Net.Sockets"/>
<fieldType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at Socket.get_InternalSyncObject()" method="Socket.get_InternalSyncObject()" offset="20"/>
<frame value="  at Socket.InitializeSockets()" method="Socket.InitializeSockets()" offset="13"/>
<frame value="  at NetworkAddressChangePolled..ctor()" method="NetworkAddressChangePolled..ctor()" offset="6"/>
<frame value="  at AutoDetector.Initialize()" method="AutoDetector.Initialize()" offset="59"/>
<frame value="  at AutoDetector.get_CurrentAutoDetector()" method="AutoDetector.get_CurrentAutoDetector()" offset="0"/>
<frame value="  at AutoWebProxyScriptEngine..ctor(WebProxy, Boolean)" method="AutoWebProxyScriptEngine..ctor(WebProxy, Boolean)" offset="21"/>
<frame value="  at WebProxy.UnsafeUpdateFromRegistry()" method="WebProxy.UnsafeUpdateFromRegistry()" offset="10"/>
<frame value="  at WebProxy..ctor(Boolean)" method="WebProxy..ctor(Boolean)" offset="14"/>
<frame value="  at DefaultProxySectionInternal..ctor(DefaultProxySection)" method="DefaultProxySectionInternal..ctor(DefaultProxySection)" offset="197"/>
<frame value="  at DefaultProxySectionInternal.GetSection()" method="DefaultProxySectionInternal.GetSection()" offset="41"/>
<frame value="  at WebRequest.get_InternalDefaultWebProxy()" method="WebRequest.get_InternalDefaultWebProxy()" offset="30"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="101"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<uninstrumented extern="true" methodDisplayName="System.Net.Sockets.SocketError System.Net.UnsafeNclNativeMethods+OSSOCK.WSAStartup(System.Int16 wVersionRequested, System.Net.WSAData&amp; lpWSAData)" declaringTypeDisplayName="System.Net.UnsafeNclNativeMethods+OSSOCK" methodShortDisplayName="OSSOCK.WSAStartup(Int16, WSAData&amp;)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Net.SafeCloseSocket+InnerSafeCloseSocket System.Net.UnsafeNclNativeMethods+OSSOCK.WSASocket(System.Net.Sockets.AddressFamily addressFamily, System.Net.Sockets.SocketType socketType, System.Net.Sockets.ProtocolType protocolType, System.IntPtr protocolInfo, System.UInt32 group, System.Net.SocketConstructorFlags flags)" declaringTypeDisplayName="System.Net.UnsafeNclNativeMethods+OSSOCK" methodShortDisplayName="OSSOCK.WSASocket(AddressFamily, SocketType, ProtocolType, IntPtr, UInt32, SocketConstructorFlags)" wikiTopic="External Method Called"/>
<uninstrumented uninstrumentable="true" methodDisplayName="System.Boolean System.Runtime.InteropServices.SafeHandle.get_IsClosed()" declaringTypeDisplayName="System.Runtime.InteropServices.SafeHandle" methodShortDisplayName="SafeHandle.get_IsClosed()" wikiTopic="Uninstrumentable Method Called"/>
<uninstrumented uninstrumentable="true" methodDisplayName="System.Boolean Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.get_IsInvalid()" declaringTypeDisplayName="Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid" methodShortDisplayName="SafeHandleMinusOneIsInvalid.get_IsInvalid()" wikiTopic="Uninstrumentable Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Net.Sockets.SocketError System.Net.UnsafeNclNativeMethods+SafeNetHandles.setsockopt(System.IntPtr handle, System.Net.Sockets.SocketOptionLevel optionLevel, System.Net.Sockets.SocketOptionName optionName, System.Net.Linger&amp; linger, System.Int32 optionLength)" declaringTypeDisplayName="System.Net.UnsafeNclNativeMethods+SafeNetHandles" methodShortDisplayName="SafeNetHandles.setsockopt(IntPtr, SocketOptionLevel, SocketOptionName, Linger&amp;, Int32)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Runtime.InteropServices.Marshal.GetLastWin32Error()" declaringTypeDisplayName="System.Runtime.InteropServices.Marshal" methodShortDisplayName="Marshal.GetLastWin32Error()" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Net.Sockets.SocketError System.Net.UnsafeNclNativeMethods+SafeNetHandles.closesocket(System.IntPtr socketHandle)" declaringTypeDisplayName="System.Net.UnsafeNclNativeMethods+SafeNetHandles" methodShortDisplayName="SafeNetHandles.closesocket(IntPtr)" wikiTopic="External Method Called"/>
<staticFieldStore fieldDisplayName="System.Net.Sockets.Socket.s_OSSupportsIPv6" declaringTypeDisplayName="System.Net.Sockets.Socket" fieldShortDisplayName="s_OSSupportsIPv6" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_OSSupportsIPv6" static="true" token="4002606"><declaringType assemblyName="System" name="Socket" token="20005ed" namespace="System.Net.Sockets"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at Socket.InitializeSockets()" method="Socket.InitializeSockets()" offset="200"/>
<frame value="  at NetworkAddressChangePolled..ctor()" method="NetworkAddressChangePolled..ctor()" offset="6"/>
<frame value="  at AutoDetector.Initialize()" method="AutoDetector.Initialize()" offset="59"/>
<frame value="  at AutoDetector.get_CurrentAutoDetector()" method="AutoDetector.get_CurrentAutoDetector()" offset="0"/>
<frame value="  at AutoWebProxyScriptEngine..ctor(WebProxy, Boolean)" method="AutoWebProxyScriptEngine..ctor(WebProxy, Boolean)" offset="21"/>
<frame value="  at WebProxy.UnsafeUpdateFromRegistry()" method="WebProxy.UnsafeUpdateFromRegistry()" offset="10"/>
<frame value="  at WebProxy..ctor(Boolean)" method="WebProxy..ctor(Boolean)" offset="14"/>
<frame value="  at DefaultProxySectionInternal..ctor(DefaultProxySection)" method="DefaultProxySectionInternal..ctor(DefaultProxySection)" offset="197"/>
<frame value="  at DefaultProxySectionInternal.GetSection()" method="DefaultProxySectionInternal.GetSection()" offset="41"/>
<frame value="  at WebRequest.get_InternalDefaultWebProxy()" method="WebRequest.get_InternalDefaultWebProxy()" offset="30"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="101"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.Sockets.Socket.s_SupportsIPv4" declaringTypeDisplayName="System.Net.Sockets.Socket" fieldShortDisplayName="s_SupportsIPv4" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_SupportsIPv4" static="true" token="4002604"><declaringType assemblyName="System" name="Socket" token="20005ed" namespace="System.Net.Sockets"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at Socket.InitializeSockets()" method="Socket.InitializeSockets()" offset="217"/>
<frame value="  at NetworkAddressChangePolled..ctor()" method="NetworkAddressChangePolled..ctor()" offset="6"/>
<frame value="  at AutoDetector.Initialize()" method="AutoDetector.Initialize()" offset="59"/>
<frame value="  at AutoDetector.get_CurrentAutoDetector()" method="AutoDetector.get_CurrentAutoDetector()" offset="0"/>
<frame value="  at AutoWebProxyScriptEngine..ctor(WebProxy, Boolean)" method="AutoWebProxyScriptEngine..ctor(WebProxy, Boolean)" offset="21"/>
<frame value="  at WebProxy.UnsafeUpdateFromRegistry()" method="WebProxy.UnsafeUpdateFromRegistry()" offset="10"/>
<frame value="  at WebProxy..ctor(Boolean)" method="WebProxy..ctor(Boolean)" offset="14"/>
<frame value="  at DefaultProxySectionInternal..ctor(DefaultProxySection)" method="DefaultProxySectionInternal..ctor(DefaultProxySection)" offset="197"/>
<frame value="  at DefaultProxySectionInternal.GetSection()" method="DefaultProxySectionInternal.GetSection()" offset="41"/>
<frame value="  at WebRequest.get_InternalDefaultWebProxy()" method="WebRequest.get_InternalDefaultWebProxy()" offset="30"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="101"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.Sockets.Socket.s_SupportsIPv6" declaringTypeDisplayName="System.Net.Sockets.Socket" fieldShortDisplayName="s_SupportsIPv6" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_SupportsIPv6" static="true" token="4002605"><declaringType assemblyName="System" name="Socket" token="20005ed" namespace="System.Net.Sockets"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at Socket.InitializeSockets()" method="Socket.InitializeSockets()" offset="223"/>
<frame value="  at NetworkAddressChangePolled..ctor()" method="NetworkAddressChangePolled..ctor()" offset="6"/>
<frame value="  at AutoDetector.Initialize()" method="AutoDetector.Initialize()" offset="59"/>
<frame value="  at AutoDetector.get_CurrentAutoDetector()" method="AutoDetector.get_CurrentAutoDetector()" offset="0"/>
<frame value="  at AutoWebProxyScriptEngine..ctor(WebProxy, Boolean)" method="AutoWebProxyScriptEngine..ctor(WebProxy, Boolean)" offset="21"/>
<frame value="  at WebProxy.UnsafeUpdateFromRegistry()" method="WebProxy.UnsafeUpdateFromRegistry()" offset="10"/>
<frame value="  at WebProxy..ctor(Boolean)" method="WebProxy..ctor(Boolean)" offset="14"/>
<frame value="  at DefaultProxySectionInternal..ctor(DefaultProxySection)" method="DefaultProxySectionInternal..ctor(DefaultProxySection)" offset="197"/>
<frame value="  at DefaultProxySectionInternal.GetSection()" method="DefaultProxySectionInternal.GetSection()" offset="41"/>
<frame value="  at WebRequest.get_InternalDefaultWebProxy()" method="WebRequest.get_InternalDefaultWebProxy()" offset="30"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="101"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.Sockets.Socket.s_PerfCountersEnabled" declaringTypeDisplayName="System.Net.Sockets.Socket" fieldShortDisplayName="s_PerfCountersEnabled" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_PerfCountersEnabled" static="true" token="400260a"><declaringType assemblyName="System" name="Socket" token="20005ed" namespace="System.Net.Sockets"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at Socket.InitializeSockets()" method="Socket.InitializeSockets()" offset="238"/>
<frame value="  at NetworkAddressChangePolled..ctor()" method="NetworkAddressChangePolled..ctor()" offset="6"/>
<frame value="  at AutoDetector.Initialize()" method="AutoDetector.Initialize()" offset="59"/>
<frame value="  at AutoDetector.get_CurrentAutoDetector()" method="AutoDetector.get_CurrentAutoDetector()" offset="0"/>
<frame value="  at AutoWebProxyScriptEngine..ctor(WebProxy, Boolean)" method="AutoWebProxyScriptEngine..ctor(WebProxy, Boolean)" offset="21"/>
<frame value="  at WebProxy.UnsafeUpdateFromRegistry()" method="WebProxy.UnsafeUpdateFromRegistry()" offset="10"/>
<frame value="  at WebProxy..ctor(Boolean)" method="WebProxy..ctor(Boolean)" offset="14"/>
<frame value="  at DefaultProxySectionInternal..ctor(DefaultProxySection)" method="DefaultProxySectionInternal..ctor(DefaultProxySection)" offset="197"/>
<frame value="  at DefaultProxySectionInternal.GetSection()" method="DefaultProxySectionInternal.GetSection()" offset="41"/>
<frame value="  at WebRequest.get_InternalDefaultWebProxy()" method="WebRequest.get_InternalDefaultWebProxy()" offset="30"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="101"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.Sockets.Socket.s_Initialized" declaringTypeDisplayName="System.Net.Sockets.Socket" fieldShortDisplayName="s_Initialized" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_Initialized" static="true" token="4002607"><declaringType assemblyName="System" name="Socket" token="20005ed" namespace="System.Net.Sockets"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at Socket.InitializeSockets()" method="Socket.InitializeSockets()" offset="244"/>
<frame value="  at NetworkAddressChangePolled..ctor()" method="NetworkAddressChangePolled..ctor()" offset="6"/>
<frame value="  at AutoDetector.Initialize()" method="AutoDetector.Initialize()" offset="59"/>
<frame value="  at AutoDetector.get_CurrentAutoDetector()" method="AutoDetector.get_CurrentAutoDetector()" offset="0"/>
<frame value="  at AutoWebProxyScriptEngine..ctor(WebProxy, Boolean)" method="AutoWebProxyScriptEngine..ctor(WebProxy, Boolean)" offset="21"/>
<frame value="  at WebProxy.UnsafeUpdateFromRegistry()" method="WebProxy.UnsafeUpdateFromRegistry()" offset="10"/>
<frame value="  at WebProxy..ctor(Boolean)" method="WebProxy..ctor(Boolean)" offset="14"/>
<frame value="  at DefaultProxySectionInternal..ctor(DefaultProxySection)" method="DefaultProxySectionInternal..ctor(DefaultProxySection)" offset="197"/>
<frame value="  at DefaultProxySectionInternal.GetSection()" method="DefaultProxySectionInternal.GetSection()" offset="41"/>
<frame value="  at WebRequest.get_InternalDefaultWebProxy()" method="WebRequest.get_InternalDefaultWebProxy()" offset="30"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="101"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<uninstrumented uninstrumentable="true" methodDisplayName="System.Void Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid..ctor(System.Boolean ownsHandle)" declaringTypeDisplayName="Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid" methodShortDisplayName="SafeHandleMinusOneIsInvalid..ctor(Boolean)" wikiTopic="Uninstrumentable Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Void System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean&amp; success)" declaringTypeDisplayName="System.Runtime.InteropServices.SafeHandle" methodShortDisplayName="SafeHandle.DangerousAddRef(Boolean&amp;)" wikiTopic="External Method Called"/>
<uninstrumented uninstrumentable="true" methodDisplayName="System.IntPtr System.Runtime.InteropServices.SafeHandle.DangerousGetHandle()" declaringTypeDisplayName="System.Runtime.InteropServices.SafeHandle" methodShortDisplayName="SafeHandle.DangerousGetHandle()" wikiTopic="Uninstrumentable Method Called"/>
<uninstrumented uninstrumentable="true" methodDisplayName="System.Void System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr handle)" declaringTypeDisplayName="System.Runtime.InteropServices.SafeHandle" methodShortDisplayName="SafeHandle.SetHandle(IntPtr)" wikiTopic="Uninstrumentable Method Called"/>
<uninstrumented uninstrumentable="true" methodDisplayName="System.Void System.Runtime.InteropServices.SafeHandle.Close()" declaringTypeDisplayName="System.Runtime.InteropServices.SafeHandle" methodShortDisplayName="SafeHandle.Close()" wikiTopic="Uninstrumentable Method Called"/>
<uninstrumented uninstrumentable="true" methodDisplayName="System.Void System.Runtime.InteropServices.SafeHandle.Dispose()" declaringTypeDisplayName="System.Runtime.InteropServices.SafeHandle" methodShortDisplayName="SafeHandle.Dispose()" wikiTopic="Uninstrumentable Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Net.Sockets.SocketError System.Net.UnsafeNclNativeMethods+OSSOCK.ioctlsocket(System.Net.SafeCloseSocket socketHandle, System.Int32 cmd, System.Int32&amp; argp)" declaringTypeDisplayName="System.Net.UnsafeNclNativeMethods+OSSOCK" methodShortDisplayName="OSSOCK.ioctlsocket(SafeCloseSocket, Int32, Int32&amp;)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Net.Sockets.SocketError System.Net.UnsafeNclNativeMethods+OSSOCK.WSAIoctl_Blocking(System.IntPtr socketHandle, System.Int32 ioControlCode, System.Byte[] inBuffer, System.Int32 inBufferSize, System.Byte[] outBuffer, System.Int32 outBufferSize, System.Int32&amp; bytesTransferred, System.Runtime.InteropServices.SafeHandle overlapped, System.IntPtr completionRoutine)" declaringTypeDisplayName="System.Net.UnsafeNclNativeMethods+OSSOCK" methodShortDisplayName="OSSOCK.WSAIoctl_Blocking(IntPtr, Int32, Byte[], Int32, Byte[], Int32, Int32&amp;, SafeHandle, IntPtr)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 Microsoft.Win32.SafeNativeMethods.FormatMessage(System.Int32 dwFlags, System.Runtime.InteropServices.HandleRef lpSource, System.Int32 dwMessageId, System.Int32 dwLanguageId, System.Text.StringBuilder lpBuffer, System.Int32 nSize, System.IntPtr arguments)" declaringTypeDisplayName="Microsoft.Win32.SafeNativeMethods" methodShortDisplayName="SafeNativeMethods.FormatMessage(Int32, HandleRef, Int32, Int32, StringBuilder, Int32, IntPtr)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Net.Sockets.SocketError System.Net.UnsafeNclNativeMethods+OSSOCK.WSAEventSelect(System.Net.SafeCloseSocket socketHandle, System.Runtime.InteropServices.SafeHandle Event, System.Net.Sockets.AsyncEventBits NetworkEvents)" declaringTypeDisplayName="System.Net.UnsafeNclNativeMethods+OSSOCK" methodShortDisplayName="OSSOCK.WSAEventSelect(SafeCloseSocket, SafeHandle, AsyncEventBits)" wikiTopic="External Method Called"/>
<staticFieldStore fieldDisplayName="System.Net.AutoWebProxyScriptEngine+AutoDetector.s_AddressChange" declaringTypeDisplayName="System.Net.AutoWebProxyScriptEngine+AutoDetector" fieldShortDisplayName="s_AddressChange" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_AddressChange" static="true" token="4001fba"><declaringType assemblyName="System" name="AutoDetector" token="20004e3"><declaringType assemblyName="System" name="AutoWebProxyScriptEngine" token="20004e1" namespace="System.Net"/>
</declaringType>
<fieldType spec="Class"><definition assemblyName="System" name="NetworkAddressChangePolled" token="2000418" namespace="System.Net"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at AutoDetector.Initialize()" method="AutoDetector.Initialize()" offset="64"/>
<frame value="  at AutoDetector.get_CurrentAutoDetector()" method="AutoDetector.get_CurrentAutoDetector()" offset="0"/>
<frame value="  at AutoWebProxyScriptEngine..ctor(WebProxy, Boolean)" method="AutoWebProxyScriptEngine..ctor(WebProxy, Boolean)" offset="21"/>
<frame value="  at WebProxy.UnsafeUpdateFromRegistry()" method="WebProxy.UnsafeUpdateFromRegistry()" offset="10"/>
<frame value="  at WebProxy..ctor(Boolean)" method="WebProxy..ctor(Boolean)" offset="14"/>
<frame value="  at DefaultProxySectionInternal..ctor(DefaultProxySection)" method="DefaultProxySectionInternal..ctor(DefaultProxySection)" offset="197"/>
<frame value="  at DefaultProxySectionInternal.GetSection()" method="DefaultProxySectionInternal.GetSection()" offset="41"/>
<frame value="  at WebRequest.get_InternalDefaultWebProxy()" method="WebRequest.get_InternalDefaultWebProxy()" offset="30"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="101"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<uninstrumented extern="true" methodDisplayName="System.UInt32 System.Net.UnsafeNclNativeMethods+RasHelper.RasConnectionNotification(System.IntPtr hrasconn, Microsoft.Win32.SafeHandles.SafeWaitHandle hEvent, System.UInt32 dwFlags)" declaringTypeDisplayName="System.Net.UnsafeNclNativeMethods+RasHelper" methodShortDisplayName="RasHelper.RasConnectionNotification(IntPtr, SafeWaitHandle, UInt32)" wikiTopic="External Method Called"/>
<staticFieldStore fieldDisplayName="System.Net.AutoWebProxyScriptEngine+AutoDetector.s_RasHelper" declaringTypeDisplayName="System.Net.AutoWebProxyScriptEngine+AutoDetector" fieldShortDisplayName="s_RasHelper" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_RasHelper" static="true" token="4001fbb"><declaringType assemblyName="System" name="AutoDetector" token="20004e3"><declaringType assemblyName="System" name="AutoWebProxyScriptEngine" token="20004e1" namespace="System.Net"/>
</declaringType>
<fieldType spec="Class"><definition assemblyName="System" name="RasHelper" token="200046f"><declaringType assemblyName="System" name="UnsafeNclNativeMethods" token="200046b" namespace="System.Net"/>
</definition>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at AutoDetector.Initialize()" method="AutoDetector.Initialize()" offset="81"/>
<frame value="  at AutoDetector.get_CurrentAutoDetector()" method="AutoDetector.get_CurrentAutoDetector()" offset="0"/>
<frame value="  at AutoWebProxyScriptEngine..ctor(WebProxy, Boolean)" method="AutoWebProxyScriptEngine..ctor(WebProxy, Boolean)" offset="21"/>
<frame value="  at WebProxy.UnsafeUpdateFromRegistry()" method="WebProxy.UnsafeUpdateFromRegistry()" offset="10"/>
<frame value="  at WebProxy..ctor(Boolean)" method="WebProxy..ctor(Boolean)" offset="14"/>
<frame value="  at DefaultProxySectionInternal..ctor(DefaultProxySection)" method="DefaultProxySectionInternal..ctor(DefaultProxySection)" offset="197"/>
<frame value="  at DefaultProxySectionInternal.GetSection()" method="DefaultProxySectionInternal.GetSection()" offset="41"/>
<frame value="  at WebRequest.get_InternalDefaultWebProxy()" method="WebRequest.get_InternalDefaultWebProxy()" offset="30"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="101"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.AutoWebProxyScriptEngine+AutoDetector.s_CurrentVersion" declaringTypeDisplayName="System.Net.AutoWebProxyScriptEngine+AutoDetector" fieldShortDisplayName="s_CurrentVersion" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_CurrentVersion" static="true" token="4001fbc"><declaringType assemblyName="System" name="AutoDetector" token="20004e3"><declaringType assemblyName="System" name="AutoWebProxyScriptEngine" token="20004e1" namespace="System.Net"/>
</declaringType>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at AutoDetector.Initialize()" method="AutoDetector.Initialize()" offset="87"/>
<frame value="  at AutoDetector.get_CurrentAutoDetector()" method="AutoDetector.get_CurrentAutoDetector()" offset="0"/>
<frame value="  at AutoWebProxyScriptEngine..ctor(WebProxy, Boolean)" method="AutoWebProxyScriptEngine..ctor(WebProxy, Boolean)" offset="21"/>
<frame value="  at WebProxy.UnsafeUpdateFromRegistry()" method="WebProxy.UnsafeUpdateFromRegistry()" offset="10"/>
<frame value="  at WebProxy..ctor(Boolean)" method="WebProxy..ctor(Boolean)" offset="14"/>
<frame value="  at DefaultProxySectionInternal..ctor(DefaultProxySection)" method="DefaultProxySectionInternal..ctor(DefaultProxySection)" offset="197"/>
<frame value="  at DefaultProxySectionInternal.GetSection()" method="DefaultProxySectionInternal.GetSection()" offset="41"/>
<frame value="  at WebRequest.get_InternalDefaultWebProxy()" method="WebRequest.get_InternalDefaultWebProxy()" offset="30"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="101"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.AutoWebProxyScriptEngine+AutoDetector.s_Initialized" declaringTypeDisplayName="System.Net.AutoWebProxyScriptEngine+AutoDetector" fieldShortDisplayName="s_Initialized" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_Initialized" static="true" token="4001fbe"><declaringType assemblyName="System" name="AutoDetector" token="20004e3"><declaringType assemblyName="System" name="AutoWebProxyScriptEngine" token="20004e1" namespace="System.Net"/>
</declaringType>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at AutoDetector.Initialize()" method="AutoDetector.Initialize()" offset="95"/>
<frame value="  at AutoDetector.get_CurrentAutoDetector()" method="AutoDetector.get_CurrentAutoDetector()" offset="0"/>
<frame value="  at AutoWebProxyScriptEngine..ctor(WebProxy, Boolean)" method="AutoWebProxyScriptEngine..ctor(WebProxy, Boolean)" offset="21"/>
<frame value="  at WebProxy.UnsafeUpdateFromRegistry()" method="WebProxy.UnsafeUpdateFromRegistry()" offset="10"/>
<frame value="  at WebProxy..ctor(Boolean)" method="WebProxy..ctor(Boolean)" offset="14"/>
<frame value="  at DefaultProxySectionInternal..ctor(DefaultProxySection)" method="DefaultProxySectionInternal..ctor(DefaultProxySection)" offset="197"/>
<frame value="  at DefaultProxySectionInternal.GetSection()" method="DefaultProxySectionInternal.GetSection()" offset="41"/>
<frame value="  at WebRequest.get_InternalDefaultWebProxy()" method="WebRequest.get_InternalDefaultWebProxy()" offset="30"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="101"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<uninstrumented extern="true" methodDisplayName="System.UInt32 System.Net.UnsafeNclNativeMethods+RegistryHelper.RegOpenCurrentUser(System.UInt32 samDesired, System.Net.SafeRegistryHandle&amp; resultKey)" declaringTypeDisplayName="System.Net.UnsafeNclNativeMethods+RegistryHelper" methodShortDisplayName="RegistryHelper.RegOpenCurrentUser(UInt32, SafeRegistryHandle&amp;)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.UInt32 System.Net.UnsafeNclNativeMethods+RegistryHelper.RegOpenKeyEx(System.Net.SafeRegistryHandle key, System.String subKey, System.UInt32 ulOptions, System.UInt32 samDesired, System.Net.SafeRegistryHandle&amp; resultSubKey)" declaringTypeDisplayName="System.Net.UnsafeNclNativeMethods+RegistryHelper" methodShortDisplayName="RegistryHelper.RegOpenKeyEx(SafeRegistryHandle, String, UInt32, UInt32, SafeRegistryHandle&amp;)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.UInt32 System.Net.UnsafeNclNativeMethods+RegistryHelper.RegNotifyChangeKeyValue(System.Net.SafeRegistryHandle key, System.Boolean watchSubTree, System.UInt32 notifyFilter, Microsoft.Win32.SafeHandles.SafeWaitHandle regEvent, System.Boolean async)" declaringTypeDisplayName="System.Net.UnsafeNclNativeMethods+RegistryHelper" methodShortDisplayName="RegistryHelper.RegNotifyChangeKeyValue(SafeRegistryHandle, Boolean, UInt32, SafeWaitHandle, Boolean)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.UInt32 System.Net.UnsafeNclNativeMethods+RegistryHelper.RegOpenKeyEx(System.IntPtr key, System.String subKey, System.UInt32 ulOptions, System.UInt32 samDesired, System.Net.SafeRegistryHandle&amp; resultSubKey)" declaringTypeDisplayName="System.Net.UnsafeNclNativeMethods+RegistryHelper" methodShortDisplayName="RegistryHelper.RegOpenKeyEx(IntPtr, String, UInt32, UInt32, SafeRegistryHandle&amp;)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Net.SafeInternetHandle System.Net.UnsafeNclNativeMethods+WinHttp.WinHttpOpen(System.String userAgent, System.Net.UnsafeNclNativeMethods+WinHttp+AccessType accessType, System.String proxyName, System.String proxyBypass, System.Int32 dwFlags)" declaringTypeDisplayName="System.Net.UnsafeNclNativeMethods+WinHttp" methodShortDisplayName="WinHttp.WinHttpOpen(String, AccessType, String, String, Int32)" wikiTopic="External Method Called"/>
<uninstrumented uninstrumentable="true" methodDisplayName="System.Boolean Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid()" declaringTypeDisplayName="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" methodShortDisplayName="SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid()" wikiTopic="Uninstrumentable Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Boolean System.Net.UnsafeNclNativeMethods+WinHttp.WinHttpSetTimeouts(System.Net.SafeInternetHandle session, System.Int32 resolveTimeout, System.Int32 connectTimeout, System.Int32 sendTimeout, System.Int32 receiveTimeout)" declaringTypeDisplayName="System.Net.UnsafeNclNativeMethods+WinHttp" methodShortDisplayName="WinHttp.WinHttpSetTimeouts(SafeInternetHandle, Int32, Int32, Int32, Int32)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Boolean System.Net.UnsafeNclNativeMethods+WinHttp.WinHttpGetIEProxyConfigForCurrentUser(System.Net.UnsafeNclNativeMethods+WinHttp+WINHTTP_CURRENT_USER_IE_PROXY_CONFIG&amp; proxyConfig)" declaringTypeDisplayName="System.Net.UnsafeNclNativeMethods+WinHttp" methodShortDisplayName="WinHttp.WinHttpGetIEProxyConfigForCurrentUser(WINHTTP_CURRENT_USER_IE_PROXY_CONFIG&amp;)" wikiTopic="External Method Called"/>
<uninstrumented uninstrumentable="true" methodDisplayName="System.String System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr ptr)" declaringTypeDisplayName="System.Runtime.InteropServices.Marshal" methodShortDisplayName="Marshal.PtrToStringUni(IntPtr)" wikiTopic="Uninstrumentable Method Called"/>
<uninstrumented uninstrumentable="true" methodDisplayName="System.Void System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr hglobal)" declaringTypeDisplayName="System.Runtime.InteropServices.Marshal" methodShortDisplayName="Marshal.FreeHGlobal(IntPtr)" wikiTopic="Uninstrumentable Method Called"/>
<staticFieldStore fieldDisplayName="System.Net.WebRequest.s_DefaultWebProxy" declaringTypeDisplayName="System.Net.WebRequest" fieldShortDisplayName="s_DefaultWebProxy" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_DefaultWebProxy" static="true" token="400180e"><declaringType assemblyName="System" name="WebRequest" token="20003cf" namespace="System.Net"/>
<fieldType spec="Class"><definition assemblyName="System" name="IWebProxy" token="20003d0" namespace="System.Net"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at WebRequest.get_InternalDefaultWebProxy()" method="WebRequest.get_InternalDefaultWebProxy()" offset="45"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="101"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.WebRequest.s_DefaultWebProxyInitialized" declaringTypeDisplayName="System.Net.WebRequest" fieldShortDisplayName="s_DefaultWebProxyInitialized" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_DefaultWebProxyInitialized" static="true" token="400180f"><declaringType assemblyName="System" name="WebRequest" token="20003cf" namespace="System.Net"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at WebRequest.get_InternalDefaultWebProxy()" method="WebRequest.get_InternalDefaultWebProxy()" offset="51"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="101"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.Configuration.RequestCachingSectionInternal.classSyncObject" declaringTypeDisplayName="System.Net.Configuration.RequestCachingSectionInternal" fieldShortDisplayName="classSyncObject" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="classSyncObject" static="true" token="4002a3b"><declaringType assemblyName="System" name="RequestCachingSectionInternal" token="20006a7" namespace="System.Net.Configuration"/>
<fieldType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at RequestCachingSectionInternal.get_ClassSyncObject()" method="RequestCachingSectionInternal.get_ClassSyncObject()" offset="20"/>
<frame value="  at RequestCachingSectionInternal.GetSection()" method="RequestCachingSectionInternal.GetSection()" offset="2"/>
<frame value="  at RequestCacheManager.LoadConfigSettings()" method="RequestCacheManager.LoadConfigSettings()" offset="23"/>
<frame value="  at RequestCacheManager.GetBinding(String)" method="RequestCacheManager.GetBinding(String)" offset="21"/>
<frame value="  at WebRequest.SetupCacheProtocol(Uri)" method="WebRequest.SetupCacheProtocol(Uri)" offset="7"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="229"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="Microsoft.Win32.WinInetCache._MaximumResponseHeadersLength" declaringTypeDisplayName="Microsoft.Win32.WinInetCache" fieldShortDisplayName="_MaximumResponseHeadersLength" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="_MaximumResponseHeadersLength" static="true" token="40023ab"><declaringType assemblyName="System" name="WinInetCache" token="200059d" namespace="Microsoft.Win32"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at WinInetCache..ctor(Boolean, Boolean, Boolean)" method="WinInetCache..ctor(Boolean, Boolean, Boolean)" offset="13"/>
<frame value="  at RequestCachingSectionInternal..ctor(RequestCachingSection)" method="RequestCachingSectionInternal..ctor(RequestCachingSection)" offset="109"/>
<frame value="  at RequestCachingSectionInternal.GetSection()" method="RequestCachingSectionInternal.GetSection()" offset="41"/>
<frame value="  at RequestCacheManager.LoadConfigSettings()" method="RequestCacheManager.LoadConfigSettings()" offset="23"/>
<frame value="  at RequestCacheManager.GetBinding(String)" method="RequestCacheManager.GetBinding(String)" offset="21"/>
<frame value="  at WebRequest.SetupCacheProtocol(Uri)" method="WebRequest.SetupCacheProtocol(Uri)" offset="7"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="229"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.Cache.RequestCacheManager.s_DefaultGlobalBinding" declaringTypeDisplayName="System.Net.Cache.RequestCacheManager" fieldShortDisplayName="s_DefaultGlobalBinding" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_DefaultGlobalBinding" static="true" token="40023d0"><declaringType assemblyName="System" name="RequestCacheManager" token="20005a1" namespace="System.Net.Cache"/>
<fieldType spec="Class"><definition assemblyName="System" name="RequestCacheBinding" token="20005a2" namespace="System.Net.Cache"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at RequestCacheManager.LoadConfigSettings()" method="RequestCacheManager.LoadConfigSettings()" offset="52"/>
<frame value="  at RequestCacheManager.GetBinding(String)" method="RequestCacheManager.GetBinding(String)" offset="21"/>
<frame value="  at WebRequest.SetupCacheProtocol(Uri)" method="WebRequest.SetupCacheProtocol(Uri)" offset="7"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="229"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.Cache.RequestCacheManager.s_DefaultHttpBinding" declaringTypeDisplayName="System.Net.Cache.RequestCacheManager" fieldShortDisplayName="s_DefaultHttpBinding" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_DefaultHttpBinding" static="true" token="40023d1"><declaringType assemblyName="System" name="RequestCacheManager" token="20005a1" namespace="System.Net.Cache"/>
<fieldType spec="Class"><definition assemblyName="System" name="RequestCacheBinding" token="20005a2" namespace="System.Net.Cache"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at RequestCacheManager.LoadConfigSettings()" method="RequestCacheManager.LoadConfigSettings()" offset="80"/>
<frame value="  at RequestCacheManager.GetBinding(String)" method="RequestCacheManager.GetBinding(String)" offset="21"/>
<frame value="  at WebRequest.SetupCacheProtocol(Uri)" method="WebRequest.SetupCacheProtocol(Uri)" offset="7"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="229"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.Cache.RequestCacheManager.s_DefaultFtpBinding" declaringTypeDisplayName="System.Net.Cache.RequestCacheManager" fieldShortDisplayName="s_DefaultFtpBinding" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_DefaultFtpBinding" static="true" token="40023d2"><declaringType assemblyName="System" name="RequestCacheManager" token="20005a1" namespace="System.Net.Cache"/>
<fieldType spec="Class"><definition assemblyName="System" name="RequestCacheBinding" token="20005a2" namespace="System.Net.Cache"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at RequestCacheManager.LoadConfigSettings()" method="RequestCacheManager.LoadConfigSettings()" offset="108"/>
<frame value="  at RequestCacheManager.GetBinding(String)" method="RequestCacheManager.GetBinding(String)" offset="21"/>
<frame value="  at WebRequest.SetupCacheProtocol(Uri)" method="WebRequest.SetupCacheProtocol(Uri)" offset="7"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="229"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.Cache.RequestCacheManager.s_CacheConfigSettings" declaringTypeDisplayName="System.Net.Cache.RequestCacheManager" fieldShortDisplayName="s_CacheConfigSettings" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_CacheConfigSettings" static="true" token="40023ce"><declaringType assemblyName="System" name="RequestCacheManager" token="20005a1" namespace="System.Net.Cache"/>
<fieldType spec="Class"><definition assemblyName="System" name="RequestCachingSectionInternal" token="20006a7" namespace="System.Net.Configuration"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at RequestCacheManager.LoadConfigSettings()" method="RequestCacheManager.LoadConfigSettings()" offset="114"/>
<frame value="  at RequestCacheManager.GetBinding(String)" method="RequestCacheManager.GetBinding(String)" offset="21"/>
<frame value="  at WebRequest.SetupCacheProtocol(Uri)" method="WebRequest.SetupCacheProtocol(Uri)" offset="7"/>
<frame value="  at HttpWebRequest..ctor(Uri, ServicePoint)" method="HttpWebRequest..ctor(Uri, ServicePoint)" offset="229"/>
<frame value="  at HttpRequestCreator.Create(Uri)" method="HttpRequestCreator.Create(Uri)" offset="2"/>
<frame value="  at WebRequest.Create(Uri, Boolean)" method="WebRequest.Create(Uri, Boolean)" offset="178"/>
<frame value="  at WebRequest.Create(Uri)" method="WebRequest.Create(Uri)" offset="22"/>
<frame value="  at WebClient.GetWebRequest(Uri)" method="WebClient.GetWebRequest(Uri)" offset="1"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="37"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<uninstrumented uninstrumentable="true" methodDisplayName="System.Runtime.InteropServices.GCHandle System.Runtime.InteropServices.GCHandle.Alloc(System.Object value)" declaringTypeDisplayName="System.Runtime.InteropServices.GCHandle" methodShortDisplayName="GCHandle.Alloc(Object)" wikiTopic="Uninstrumentable Method Called"/>
<uninstrumented uninstrumentable="true" methodDisplayName="System.IntPtr System.Runtime.InteropServices.GCHandle.op_Explicit(System.Runtime.InteropServices.GCHandle value)" declaringTypeDisplayName="System.Runtime.InteropServices.GCHandle" methodShortDisplayName="GCHandle.op_Explicit(GCHandle)" wikiTopic="Uninstrumentable Method Called"/>
<staticFieldStore fieldDisplayName="System.Net.TimerThread.s_ThreadState" declaringTypeDisplayName="System.Net.TimerThread" fieldShortDisplayName="s_ThreadState" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_ThreadState" static="true" token="400231b"><declaringType assemblyName="System" name="TimerThread" token="2000587" namespace="System.Net"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at TimerThread.Prod()" method="TimerThread.Prod()" offset="18"/>
<frame value="  at TimerQueue.CreateTimer(Callback, Object)" method="TimerQueue.CreateTimer(Callback, Object)" offset="168"/>
<frame value="  at HttpWebRequest.GetResponse()" method="HttpWebRequest.GetResponse()" offset="329"/>
<frame value="  at WebClient.GetWebResponse(WebRequest)" method="WebClient.GetWebResponse(WebRequest)" offset="1"/>
<frame value="  at WebClient.DownloadBits(WebRequest, Stream, CompletionDelegate, AsyncOperation)" method="WebClient.DownloadBits(WebRequest, Stream, CompletionDelegate, AsyncOperation)" offset="53"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="57"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.Configuration.ConnectionManagementSectionInternal.classSyncObject" declaringTypeDisplayName="System.Net.Configuration.ConnectionManagementSectionInternal" fieldShortDisplayName="classSyncObject" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="classSyncObject" static="true" token="4002a01"><declaringType assemblyName="System" name="ConnectionManagementSectionInternal" token="2000695" namespace="System.Net.Configuration"/>
<fieldType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at ConnectionManagementSectionInternal.get_ClassSyncObject()" method="ConnectionManagementSectionInternal.get_ClassSyncObject()" offset="20"/>
<frame value="  at ConnectionManagementSectionInternal.GetSection()" method="ConnectionManagementSectionInternal.GetSection()" offset="2"/>
<frame value="  at ServicePointManager.get_ConfigTable()" method="ServicePointManager.get_ConfigTable()" offset="30"/>
<frame value="  at ServicePointManager.get_InternalConnectionLimit()" method="ServicePointManager.get_InternalConnectionLimit()" offset="7"/>
<frame value="  at ServicePointManager.FindServicePointHelper(Uri, Boolean)" method="ServicePointManager.FindServicePointHelper(Uri, Boolean)" offset="150"/>
<frame value="  at ServicePointManager.FindServicePoint(Uri, IWebProxy, ProxyChain&amp;, HttpAbortDelegate&amp;, Int32&amp;)" method="ServicePointManager.FindServicePoint(Uri, IWebProxy, ProxyChain&amp;, HttpAbortDelegate&amp;, Int32&amp;)" offset="156"/>
<frame value="  at HttpWebRequest.FindServicePoint(Boolean)" method="HttpWebRequest.FindServicePoint(Boolean)" offset="108"/>
<frame value="  at HttpWebRequest.BeginSubmitRequest()" method="HttpWebRequest.BeginSubmitRequest()" offset="3"/>
<frame value="  at HttpWebRequest.GetResponse()" method="HttpWebRequest.GetResponse()" offset="357"/>
<frame value="  at WebClient.GetWebResponse(WebRequest)" method="WebClient.GetWebResponse(WebRequest)" offset="1"/>
<frame value="  at WebClient.DownloadBits(WebRequest, Stream, CompletionDelegate, AsyncOperation)" method="WebClient.DownloadBits(WebRequest, Stream, CompletionDelegate, AsyncOperation)" offset="53"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="57"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.ServicePointManager.s_ConfigTable" declaringTypeDisplayName="System.Net.ServicePointManager" fieldShortDisplayName="s_ConfigTable" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_ConfigTable" static="true" token="4001c80"><declaringType assemblyName="System" name="ServicePointManager" token="2000463" namespace="System.Net"/>
<fieldType spec="Class"><definition assemblyName="mscorlib" name="Hashtable" token="2000335" namespace="System.Collections"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at ServicePointManager.get_ConfigTable()" method="ServicePointManager.get_ConfigTable()" offset="97"/>
<frame value="  at ServicePointManager.get_InternalConnectionLimit()" method="ServicePointManager.get_InternalConnectionLimit()" offset="7"/>
<frame value="  at ServicePointManager.FindServicePointHelper(Uri, Boolean)" method="ServicePointManager.FindServicePointHelper(Uri, Boolean)" offset="150"/>
<frame value="  at ServicePointManager.FindServicePoint(Uri, IWebProxy, ProxyChain&amp;, HttpAbortDelegate&amp;, Int32&amp;)" method="ServicePointManager.FindServicePoint(Uri, IWebProxy, ProxyChain&amp;, HttpAbortDelegate&amp;, Int32&amp;)" offset="156"/>
<frame value="  at HttpWebRequest.FindServicePoint(Boolean)" method="HttpWebRequest.FindServicePoint(Boolean)" offset="108"/>
<frame value="  at HttpWebRequest.BeginSubmitRequest()" method="HttpWebRequest.BeginSubmitRequest()" offset="3"/>
<frame value="  at HttpWebRequest.GetResponse()" method="HttpWebRequest.GetResponse()" offset="357"/>
<frame value="  at WebClient.GetWebResponse(WebRequest)" method="WebClient.GetWebResponse(WebRequest)" offset="1"/>
<frame value="  at WebClient.DownloadBits(WebRequest, Stream, CompletionDelegate, AsyncOperation)" method="WebClient.DownloadBits(WebRequest, Stream, CompletionDelegate, AsyncOperation)" offset="53"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="57"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<uninstrumented methodDisplayName="System.TimeSpan System.TimeZoneInfo.GetDateTimeNowUtcOffsetFromUtc(System.DateTime time, System.Boolean&amp; isAmbiguousLocalDst)" declaringTypeDisplayName="System.TimeZoneInfo" methodShortDisplayName="TimeZoneInfo.GetDateTimeNowUtcOffsetFromUtc(DateTime, Boolean&amp;)" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented methodDisplayName="System.Int32 System.Text.EncodingNLS.GetByteCount(System.Char[] chars, System.Int32 index, System.Int32 count)" declaringTypeDisplayName="System.Text.EncodingNLS" methodShortDisplayName="EncodingNLS.GetByteCount(Char[], Int32, Int32)" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented methodDisplayName="System.Int32 System.Text.EncodingNLS.GetBytes(System.Char[] chars, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex)" declaringTypeDisplayName="System.Text.EncodingNLS" methodShortDisplayName="EncodingNLS.GetBytes(Char[], Int32, Int32, Byte[], Int32)" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented methodDisplayName="System.String System.Text.EncodingNLS.GetString(System.Byte[] bytes, System.Int32 index, System.Int32 count)" declaringTypeDisplayName="System.Text.EncodingNLS" methodShortDisplayName="EncodingNLS.GetString(Byte[], Int32, Int32)" wikiTopic="Uninstrumented Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.UInt32 System.Net.NetworkInformation.UnsafeNetInfoNativeMethods.GetNetworkParams(System.Net.SafeLocalFree pFixedInfo, System.UInt32&amp; pOutBufLen)" declaringTypeDisplayName="System.Net.NetworkInformation.UnsafeNetInfoNativeMethods" methodShortDisplayName="UnsafeNetInfoNativeMethods.GetNetworkParams(SafeLocalFree, UInt32&amp;)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Net.SafeLocalFree System.Net.UnsafeNclNativeMethods+SafeNetHandles.LocalAlloc(System.Int32 uFlags, System.UIntPtr sizetdwBytes)" declaringTypeDisplayName="System.Net.UnsafeNclNativeMethods+SafeNetHandles" methodShortDisplayName="SafeNetHandles.LocalAlloc(Int32, UIntPtr)" wikiTopic="External Method Called"/>
<uninstrumented uninstrumentable="true" methodDisplayName="System.Object System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr ptr, System.Type structureType)" declaringTypeDisplayName="System.Runtime.InteropServices.Marshal" methodShortDisplayName="Marshal.PtrToStructure(IntPtr, Type)" wikiTopic="Uninstrumentable Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Net.UnsafeNclNativeMethods+OSSOCK.inet_addr(System.String cp)" declaringTypeDisplayName="System.Net.UnsafeNclNativeMethods+OSSOCK" methodShortDisplayName="OSSOCK.inet_addr(String)" wikiTopic="External Method Called"/>
<uninstrumented extern="true" methodDisplayName="System.IntPtr System.Net.UnsafeNclNativeMethods+SafeNetHandles.LocalFree(System.IntPtr handle)" declaringTypeDisplayName="System.Net.UnsafeNclNativeMethods+SafeNetHandles" methodShortDisplayName="SafeNetHandles.LocalFree(IntPtr)" wikiTopic="External Method Called"/>
<staticFieldStore fieldDisplayName="System.Net.NetworkInformation.SystemIPGlobalProperties.hostName" declaringTypeDisplayName="System.Net.NetworkInformation.SystemIPGlobalProperties" fieldShortDisplayName="hostName" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="hostName" static="true" token="400294e"><declaringType assemblyName="System" name="SystemIPGlobalProperties" token="2000677" namespace="System.Net.NetworkInformation"/>
<fieldType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at SystemIPGlobalProperties.get_HostName()" method="SystemIPGlobalProperties.get_HostName()" offset="44"/>
<frame value="  at NclUtilities.GuessWhetherHostIsLoopback(String)" method="NclUtilities.GuessWhetherHostIsLoopback(String)" offset="42"/>
<frame value="  at ServicePoint.get_ConnectionLimit()" method="ServicePoint.get_ConnectionLimit()" offset="123"/>
<frame value="  at ConnectionGroup..ctor(ServicePoint, String)" method="ConnectionGroup..ctor(ServicePoint, String)" offset="22"/>
<frame value="  at ServicePoint.FindConnectionGroup(String, Boolean)" method="ServicePoint.FindConnectionGroup(String, Boolean)" offset="33"/>
<frame value="  at ServicePoint.SubmitRequest(HttpWebRequest, String)" method="ServicePoint.SubmitRequest(HttpWebRequest, String)" offset="18"/>
<frame value="  at HttpWebRequest.SubmitRequest(ServicePoint)" method="HttpWebRequest.SubmitRequest(ServicePoint)" offset="267"/>
<frame value="  at HttpWebRequest.BeginSubmitRequest()" method="HttpWebRequest.BeginSubmitRequest()" offset="8"/>
<frame value="  at HttpWebRequest.GetResponse()" method="HttpWebRequest.GetResponse()" offset="357"/>
<frame value="  at WebClient.GetWebResponse(WebRequest)" method="WebClient.GetWebResponse(WebRequest)" offset="1"/>
<frame value="  at WebClient.DownloadBits(WebRequest, Stream, CompletionDelegate, AsyncOperation)" method="WebClient.DownloadBits(WebRequest, Stream, CompletionDelegate, AsyncOperation)" offset="53"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="57"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.NetworkInformation.SystemIPGlobalProperties.domainName" declaringTypeDisplayName="System.Net.NetworkInformation.SystemIPGlobalProperties" fieldShortDisplayName="domainName" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="domainName" static="true" token="400294f"><declaringType assemblyName="System" name="SystemIPGlobalProperties" token="2000677" namespace="System.Net.NetworkInformation"/>
<fieldType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at SystemIPGlobalProperties.get_HostName()" method="SystemIPGlobalProperties.get_HostName()" offset="63"/>
<frame value="  at NclUtilities.GuessWhetherHostIsLoopback(String)" method="NclUtilities.GuessWhetherHostIsLoopback(String)" offset="42"/>
<frame value="  at ServicePoint.get_ConnectionLimit()" method="ServicePoint.get_ConnectionLimit()" offset="123"/>
<frame value="  at ConnectionGroup..ctor(ServicePoint, String)" method="ConnectionGroup..ctor(ServicePoint, String)" offset="22"/>
<frame value="  at ServicePoint.FindConnectionGroup(String, Boolean)" method="ServicePoint.FindConnectionGroup(String, Boolean)" offset="33"/>
<frame value="  at ServicePoint.SubmitRequest(HttpWebRequest, String)" method="ServicePoint.SubmitRequest(HttpWebRequest, String)" offset="18"/>
<frame value="  at HttpWebRequest.SubmitRequest(ServicePoint)" method="HttpWebRequest.SubmitRequest(ServicePoint)" offset="267"/>
<frame value="  at HttpWebRequest.BeginSubmitRequest()" method="HttpWebRequest.BeginSubmitRequest()" offset="8"/>
<frame value="  at HttpWebRequest.GetResponse()" method="HttpWebRequest.GetResponse()" offset="357"/>
<frame value="  at WebClient.GetWebResponse(WebRequest)" method="WebClient.GetWebResponse(WebRequest)" offset="1"/>
<frame value="  at WebClient.DownloadBits(WebRequest, Stream, CompletionDelegate, AsyncOperation)" method="WebClient.DownloadBits(WebRequest, Stream, CompletionDelegate, AsyncOperation)" offset="53"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="57"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<staticFieldStore fieldDisplayName="System.Net.Sockets.Socket.s_LoggingEnabled" declaringTypeDisplayName="System.Net.Sockets.Socket" fieldShortDisplayName="s_LoggingEnabled" wikiTopic="Value Stored In Static Field"><field><definition assemblyName="System" name="s_LoggingEnabled" static="true" token="4002609"><declaringType assemblyName="System" name="Socket" token="20005ed" namespace="System.Net.Sockets"/>
<fieldType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</fieldType>
</definition>
</field>
<stackTrace><frame value="  at Socket..ctor(AddressFamily, SocketType, ProtocolType)" method="Socket..ctor(AddressFamily, SocketType, ProtocolType)" offset="32"/>
<frame value="  at ServicePoint.GetConnection(PooledStream, Object, Boolean, IPAddress&amp;, Socket&amp;, Socket&amp;, Int32)" method="ServicePoint.GetConnection(PooledStream, Object, Boolean, IPAddress&amp;, Socket&amp;, Socket&amp;, Int32)" offset="25"/>
<frame value="  at PooledStream.Activate(Object, Boolean, Int32, GeneralAsyncDelegate)" method="PooledStream.Activate(Object, Boolean, Int32, GeneralAsyncDelegate)" offset="45"/>
<frame value="  at Connection.CompleteStartConnection(Boolean, HttpWebRequest)" method="Connection.CompleteStartConnection(Boolean, HttpWebRequest)" offset="114"/>
<frame value="  at Connection.CompleteStartRequest(Boolean, HttpWebRequest, TriState)" method="Connection.CompleteStartRequest(Boolean, HttpWebRequest, TriState)" offset="28"/>
<frame value="  at Connection.SubmitRequest(HttpWebRequest, Boolean)" method="Connection.SubmitRequest(HttpWebRequest, Boolean)" offset="430"/>
<frame value="  at ServicePoint.SubmitRequest(HttpWebRequest, String)" method="ServicePoint.SubmitRequest(HttpWebRequest, String)" offset="55"/>
<frame value="  at HttpWebRequest.SubmitRequest(ServicePoint)" method="HttpWebRequest.SubmitRequest(ServicePoint)" offset="267"/>
<frame value="  at HttpWebRequest.BeginSubmitRequest()" method="HttpWebRequest.BeginSubmitRequest()" offset="8"/>
<frame value="  at HttpWebRequest.GetResponse()" method="HttpWebRequest.GetResponse()" offset="357"/>
<frame value="  at WebClient.GetWebResponse(WebRequest)" method="WebClient.GetWebResponse(WebRequest)" offset="1"/>
<frame value="  at WebClient.DownloadBits(WebRequest, Stream, CompletionDelegate, AsyncOperation)" method="WebClient.DownloadBits(WebRequest, Stream, CompletionDelegate, AsyncOperation)" offset="53"/>
<frame value="  at WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" method="WebClient.DownloadDataInternal(Uri, WebRequest&amp;)" offset="57"/>
<frame value="  at WebClient.DownloadString(Uri)" method="WebClient.DownloadString(Uri)" offset="54"/>
<frame value="  at TwitterClient.GetRequest(Uri) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs(21)" method="TwitterClient.GetRequest(Uri)" offset="35" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterClient.cs" line="21"><beforeSource><![CDATA[            #endregion

            WebClient client = new WebClient();]]></beforeSource>
<source><![CDATA[            return client.DownloadString(requestUri);]]></source>
<afterSource><![CDATA[        }
    }
}]]></afterSource>
</frame>
<frame value="  at TwitterService.GetCompleteUserTimeline(ITwitterClient) in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs(11)" method="TwitterService.GetCompleteUserTimeline(ITwitterClient)" offset="12" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\Servicies\Twitter\TwitterService.cs" line="11"><beforeSource><![CDATA[    {
        public Tweet[] GetCompleteUserTimeline(ITwitterClient twitterClient)
        {]]></beforeSource>
<source><![CDATA[            string tweetsJson = twitterClient.GetRequest(new Uri("https://api.twitter.com/1/statuses/user_timeline.json?include_entities=false&include_rts=false&screen_name=janstafa&count=1000000"));]]></source>
<afterSource><![CDATA[
            Tweet[] tweets = JsonConvert.DeserializeObject<Tweet[]>(tweetsJson);
]]></afterSource>
</frame>
<frame value="  at ServiceRecordModel.GetAllServiceRecords() in C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs(17)" method="ServiceRecordModel.GetAllServiceRecords()" offset="13" file="C:\Users\Simon\Workspace\C#\Projects\PersonalPage\PersonalPage\Models\RecordModel.cs" line="17"><beforeSource><![CDATA[        public IEnumerable<ServiceRecord> GetAllServiceRecords()
        {
            TwitterService twitterService = new TwitterService();]]></beforeSource>
<source><![CDATA[            Tweet[] completeUserTimeline = twitterService.GetCompleteUserTimeline(new TwitterClient());]]></source>
<afterSource><![CDATA[
            return completeUserTimeline;
        }]]></afterSource>
</frame>
<frame value="  at ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" method="ServiceRecordModelTest.GetAllServiceRecords(ServiceRecordModel)" offset="1"/>
</stackTrace>
</staticFieldStore>
<uninstrumented extern="true" methodDisplayName="System.Int32 System.Net.UnsafeNclNativeMethods+SafeNetHandlesXPOrLater.getaddrinfo(System.String nodename, System.String servicename, System.Net.AddressInfo&amp; hints, System.Net.SafeFreeAddrInfo&amp; handle)" declaringTypeDisplayName="System.Net.UnsafeNclNativeMethods+SafeNetHandlesXPOrLater" methodShortDisplayName="SafeNetHandlesXPOrLater.getaddrinfo(String, String, AddressInfo&amp;, SafeFreeAddrInfo&amp;)" wikiTopic="External Method Called"/>
<boundary kind="maxbranches" value="10000" message="maximum number of branches exceeded"/>
<log level="message" time="2012-05-10 16:52:51Z" category="execution" message="Please notice: A branch in the method System.Collections.Hashtable.InitHash was executed 320 times; please check that the code is not stuck in an infinite loop."/>
<generatedTest id="15eae0e5-961a-40f4-bd29-a400e6432d03" index="1" run="1" status="pathboundsexceeded" explorationIsDynamicCode="true" boundaryDetails="Please notice: A branch in the method System.Collections.Hashtable.InitHash was executed 320 times; please check that the code is not stuck in an infinite loop." generated="true" new="true" assemblyName="PersonalPage1.Tests" name="GetAllServiceRecords861"/>
<log level="message" time="2012-05-10 16:52:52Z" category="coverage" message="coverage increased from 0 to 4 blocks (+4) after flipping System.DomainNameHelper.IsValid at 0x0045"/>
<log level="message" time="2012-05-10 16:52:52Z" category="progress" message="    2 constraint systems (50.00 % solved, 50.00 % proven unsatisfiable)"/>
<coverage domain="usercodeundertest" unit="block" covered="4" total="4" coveredRatio="1"/>
<sourceCoverage xml="cov\e292\cov.xml" html="cov\e292\cov.html"/>
<result name="GetAllServiceRecords(ServiceRecordModel)" state="success" duration="9.07666548757052"/>
<duration start="2012-05-10 16:52:43Z" end="2012-05-10 16:52:52Z" seconds="9.0995129"/>
</exploration>
<exploration shortName="GetSpecificServiceRecords(ServiceRecordModel, String)" fullName="PersonalPage.Models.ServiceRecordModelTest.GetSpecificServiceRecords(ServiceRecordModel, String)" isDynamicCode="true"><target><methodDefinition assemblyName="PersonalPage" name="GetSpecificServiceRecords" token="6000044"><declaringType assemblyName="PersonalPage" name="ServiceRecordModel" token="2000011" namespace="PersonalPage.Models"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="PersonalPage" name="ServiceRecordModel" token="2000011" namespace="PersonalPage.Models"/>
</type>
</parameter>
<parameter name="serviceName" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="200004d" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="PersonalPage" name="ServiceRecord" token="2000002" namespace="PersonalPage.Models.Entities"/>
</genericTypeArgument>
</resultType>
</methodDefinition>
</target>
<generatedTest id="6fb19c69-d122-46c5-96ea-7f849a7ed170" index="1" run="1" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="PersonalPage1.Tests" name="GetSpecificServiceRecords375"/>
<log level="message" time="2012-05-10 16:52:52Z" category="coverage" message="coverage increased from 0 to 2 blocks (+2) after flipping &lt;unknown method&gt; at 0x&lt;unknown offset&gt;"/>
<coverage domain="usercodeundertest" unit="block" covered="2" total="2" coveredRatio="1"/>
<sourceCoverage xml="cov\e1232\cov.xml" html="cov\e1232\cov.html"/>
<result name="GetSpecificServiceRecords(ServiceRecordModel, String)" state="success" duration="0.11"/>
<duration start="2012-05-10 16:52:52Z" end="2012-05-10 16:52:52Z" seconds="0.11"/>
</exploration>
<coverage domain="usercodeundertest" unit="block" covered="6" total="6" coveredRatio="1"/>
<sourceCoverage xml="cov\t516\cov.xml" html="cov\t516\cov.html"/>
<duration start="2012-05-10 16:52:43Z" end="2012-05-10 16:52:52Z" seconds="9.363528"/>
</fixture>
<coverage domain="usercodeundertest" unit="block" covered="6" total="6" coveredRatio="1"/>
<sourceCoverage xml="cov\a32359082\cov.xml" html="cov\a32359082\cov.html"/>
<duration start="2012-05-10 16:52:43Z" end="2012-05-10 16:52:53Z" seconds="9.6805462"/>
</assembly>
<duration start="2012-05-10 16:52:40Z" end="2012-05-10 16:52:53Z" seconds="12.0696812"/>
<background/>
</pex>
